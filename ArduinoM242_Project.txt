int digitalPinPIR = 4;
int digitalPinUDS = 7;
const int redPin = 12;
const int bluePin = 11;
const int greenPin = 10;
int PIRstate = 0;
int UDSstate = 0;
int dist;


void setup()
{  
 pinMode(digitalPinPIR, INPUT);
 pinMode(digitalPinUDS, INPUT);
 pinMode(redPin, OUTPUT);
 pinMode(bluePin, OUTPUT);
 pinMode(greenPin, OUTPUT);
 Serial.begin(9600);
}


//void PIRcheckMovement() { //Kontrolliert ob sich etwas bewegt

// Code fÃ¼r den UDS, kopiert vom Tinkercad Beispiel
long readUltrasonicDistance(int triggerPin, int echoPin)
{
  pinMode(triggerPin, OUTPUT);  // Clear the trigger
  digitalWrite(triggerPin, LOW);
  delayMicroseconds(2);
  // Sets the trigger pin to HIGH state for 10 microseconds
  digitalWrite(triggerPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(triggerPin, LOW);
  pinMode(echoPin, INPUT);
  // Reads the echo pin, and returns the sound wave travel time in microseconds
  return pulseIn(echoPin, HIGH);
}
//Ende kopierter code
            
void setColor(int red, int green, int blue) {
    digitalWrite(redPin, red);
    digitalWrite(bluePin, blue);
    digitalWrite(greenPin, green);
}

void loop(){
PIRstate = digitalRead(digitalPinPIR); //Read the state of the PIR sensor
  
  if(PIRstate == HIGH){
    Serial.print("Bewegung nachegwiesen.");
    Serial.print("\n");
    delay(3000);
    UDSstate = digitalRead(digitalPinUDS);
    // measure the ping time in cm
    dist = 0.01723 * readUltrasonicDistance(7, 7);  //Code kopiert vom Tinkercad UDS Beispiel
       while(UDSstate == HIGH) {
              if ( (dist >=0) && (dist <=100) ) {
              setColor(0, 201, 204);
                  analogWrite(redPin, HIGH);
                } else if ( (dist >=100) && (dist <=200) ) { 
                setColor(52, 168, 83);
                analogWrite(bluePin, HIGH);
            } else if ( (dist >=200) && (dist <=300) ) {
                setColor(247, 120, 138);
                  analogWrite(greenPin, HIGH);
              } else {
                setColor(255, 255, 255);
              }
      } 
  } else {
      Serial.print("Keine Bewegung nachgewiesen.");
      Serial.print("\n");
      delay(3000);
  }
}

   
