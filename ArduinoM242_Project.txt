int digitalPinPIR = 4;
int digitalPinUDS = 5;
int redPin = 12;
int bluePin = 11;
int greenPin = 10;
int PIRstate = 0;
int UDSstate = 0;



void setup()
{  
 pinMode(digitalPinPIR, INPUT);
 pinMode(digitalPinUDS, INPUT);
 pinMode(redPin, OUTPUT);
 pinMode(bluePin, OUTPUT);
 pinMode(greenPin, OUTPUT);
 Serial.begin(9600);
}


void PIRcheckMovement() { //Kontrolliert ob sich etwas bewegt
 PIRstate = digitalRead(digitalPinPIR); //Read the state of the PIR sensor
  
  if(PIRstate, HIGH){
    Serial.print("Bewegung nachegwiesen.");
  } else if(digitalPinPIR, LOW) {
    Serial.print("Keine Bewegung nachgewiesen.");
  } else {
    Serial.print("Keine Ausgabe.");
  } 
}
// Code fÃ¼r den UDS, kopiert vom Tinkercad Beispiel
long readUltrasonicDistance(int triggerPin, int echoPin) {
 	pinMode(triggerPin, OUTPUT);  // Clear the trigger
  	digitalWrite(triggerPin, LOW);
  	delayMicroseconds(2);
  	// Sets the trigger pin to HIGH state for 10 microseconds
  	digitalWrite(triggerPin, HIGH);
  	delayMicroseconds(10);
  	digitalWrite(triggerPin, LOW);
  	pinMode(echoPin, INPUT);
  	// Reads the echo pin, and returns the sound wave travel time in microseconds
  	return pulseIn(echoPin, HIGH);
}
//Ende kopierter code
            
void setColor(int red, int green, int blue) {
  	digitalWrite(redPin, red);
 	digitalWrite(bluePin, blue);
    digitalWrite(greenPin, green);
}

// measure the ping time in cm
int dist = 0.01723 * readUltrasonicDistance(7, 7); //Code kopiert vom Tinkercad UDS Beispiel
 
void checkDistance() {
 UDSstate = digitalRead(digitalPinUDS);
  
  if(UDSstate, HIGH) {
    	Serial.println("Kontrolliere die Distanz");
    
    	while(UDSstate, HIGH && PIRstate, HIGH) {
          
          	if (dist 0=> && <=100) {
				setColor(255, 0, 0);
          		digitalWrite(redPin, HIGH); 
        	 } else if (dist 100=> && <=200) {
         		setColor(0, 0, 255);
            	digitalWrite(bluePin, HIGH);
       		 } else if (dist 200=> && <=300) {
         		setColor(0, 255, 0);
          		analogWrite(greenPin, HIGH);
        	 } else {
        		setColor(255, 255, 255);
             }
        }
  }
  
}

void loop(){
 	
}